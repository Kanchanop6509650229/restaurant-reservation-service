<?xml version="1.0" encoding="UTF-8"?>
<!-- Project Object Model (POM) for Reservation Service -->
<!-- This file defines the build configuration and dependencies for the Reservation Service module -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- Maven model version -->
    <modelVersion>4.0.0</modelVersion>

    <!-- Parent POM configuration -->
    <!-- Inherits common configurations and dependencies from the parent project -->
    <parent>
        <groupId>com.restaurant</groupId>
        <artifactId>restaurant-reservation-platform</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <!-- Module identification -->
    <!-- Defines the unique identifier and version for the Reservation Service module -->
    <artifactId>reservation-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>reservation-service</name>
    <description>Reservation Service for Restaurant Reservation Platform</description>

    <!-- Dependencies section -->
    <!-- Lists all required libraries and frameworks for the Reservation Service -->
    <dependencies>
        <!-- Common module dependency -->
        <!-- Contains shared code, models, and utilities used across the platform -->
        <dependency>
            <groupId>com.restaurant</groupId>
            <artifactId>common</artifactId>
        </dependency>

        <!-- Spring Boot Starters -->
        <!-- Core Spring Boot dependencies for building web applications -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- Spring Data JPA for database access and ORM -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- Bean validation support -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <!-- Spring Kafka integration for event-driven communication -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>

        <!-- Security Dependencies -->
        <!-- Spring Security for authentication and authorization -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- JWT (JSON Web Token) support for stateless authentication -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>0.11.5</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.11.5</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.11.5</version>
            <scope>runtime</scope>
        </dependency>

        <!-- SpringDoc OpenAPI for Swagger documentation -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.2.0</version>
        </dependency>

        <!-- Database -->
        <!-- H2 in-memory database for development and testing -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- MySQL JDBC driver for production database -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Testing -->
        <!-- Spring Boot test support -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Kafka test utilities -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Spring Security test support -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- Build configuration -->
    <!-- Defines how the project should be built and packaged -->
    <build>
        <plugins>
            <!-- Maven compiler plugin configuration -->
            <!-- Sets Java version and compiler options -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <parameters>true</parameters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.restaurant.reservation.ReservationServiceApplication</mainClass>
                    <layout>JAR</layout>
                    <executable>true</executable>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>